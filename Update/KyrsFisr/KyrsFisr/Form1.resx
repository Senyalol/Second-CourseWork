<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FiltrBut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJUAAAAwCAMAAAAvrcggAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAHdUExURdwJLuVGYu6El/////bBy9wJePTo//iOLt9nvPz///yxf98J
        LtxDofj3//7NoeQJLtwkf/7cteokLtwJQuy88v/ovNwweO+x1/zz+P/36/eScf/Nod9MhvHA5P33//7s
        3fR6XdxPtfr//+gJLvDA5PR+ZNxjvPyxeOSO1/7////31+9DLtyO1/7s5PjJ0Pno+P//+PiKVvPc8v3w
        8v3z+P7w8v3Amuix6/7k3ffJ1/rw////6/RjLv/w5PfJ0Pfc8vjz///7+PqlePi1vPRnQtxuofBfUNwJ
        Xe/R+P/Rof//1+8JLuaCoe1MQvXo//21f9yK1/7Fk+7J+P/owuswLuWW1///5PNXLuOa3ey8+Nwkofj/
        //Z2Lvqla/ihodwJUOZ2p/TA0Pnk8twkVuqCtfXJ1/rs8u/N/+/N+P3g1/fJwvO85P/3+PzY0PfAvPXR
        +NwJa/Pg//RfLviOXdxuwv3/////3fBDLv/wyewkLtw7p/n////zyewJLvmaVtwJVu7N+P/30O4kLv/k
        tecJLv24hvDU/+WS1/A7LtxPrvjJ3fz3//rg69x6yf7o3ffR5P37+Prg8txurvfR6+R6vPnw///38vmx
        jOeS0Oqx6//w3fDJ6/73//3gye2Elm9b5KQAAAAJcEhZcwAAEnEAABJxAfPceo4AAAAHdElNRQfoBBYA
        ISQGrWz+AAACKUlEQVRYR+2WaVMTQRCGR15BI4hIXAQjqEQhC6gLAaNGRAQFPBFEwfsAFBQUVAQB8b6Q
        Q7wvfqvdm0m5GFK1sSruWjXPl0x6emufmu7pWqFQKBQKhcL1LImLTHCEFMQhRSY4gkutlsbBUav/m9Q0
        LKOf5R6sSI9E3EDEKmMlMlfJiBswrbLSsDpbBlwBW3nXQGOpnLW5QN66dIqZ+MT6/AJgw0ZO3FTIIc1P
        aZs5uIUKXuThWDFv20OOzEWQCRK2Cuglpbwuw9Zt22GUp1YEK4Gq4A4RMnbu2o3wHtos8lTvrWGrjH2o
        5X3qQ7KqCgb387P2sDuvyKrOE6431wcOCtHQiCbzFA4dpsiRo0JkHcNxWjbjBGlrfm8LWk8Kb5t+6nQ0
        yz4JWAGtlqZqN6tkfV8HlZLjxabVmbPGOfpLz53/Cys5NGOItboQvYAXL12+QqWxWF3t7OqmJmKrDroV
        bBU1uUaWCVvZhftKDquG66jt6b1hsaK7ebOv/xZb3R4ID/5bKxHQjTtC3L03dH9hBdsxPCIr+GB0bPyP
        Cj5MstXEI1DDl+HxEz6e31YhPH3GE5asQnjOl1TzT7wwu/2lPvQqyVbsUlL6uhDVbybfWqymdEzPzL6D
        b+69zufIVmzJk4FPN8lW/Cot+8NHfPocsFh5v0zSVP0KXzO+8Sg1rUTO9x8wftIUSdxKjsxFkAmOMB+Z
        TrE4+n01L8dTDOqrT6FQKBQKhasQ4hcEUlvotyuu9gAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>14, 15</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>